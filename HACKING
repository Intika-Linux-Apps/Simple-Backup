************************
How to hack on NSsbackup
************************

Style guide
-----------

When writing code for NSsbackup please follow the style guide for Python code,
PEP 8. See http://www.python.org/dev/peps/pep-0008/.

Tools to ease you writing good style code are:

Eclipse IDE
Pydev
Pylint - checks the code style, imports, unused variables etc.


Summary of style guide
----------------------

* Use 4 spaces per indentation level.
* Never mix tabs and spaces.
* Use spaces instead of tabs (set this in your IDE). 
* Limit line length to 80 characters.
* Modules should have short, all-lowercase names.  Underscores can be used
  in the module name if it improves readability.
* Function names, method names and instance variables should be lowercase, with
  words separated by underscores as necessary to improve readability.
* Top level functions and classes are separated by 2 lines, method definitions
  within classes by a single line

  
http://blog.melhase.net/files/epp-chapter-10.pdf


How to run from source code
---------------------------

(It is not recommended to install NSsbackup for productive use and to code on it
beside at the same time.)


The reason is that there are 2 packages for import in
that case, it might occur name conflicts: in your development environment and
in the Python site-packages directory.

1. Add your development directory to the Python path. Do this in a shell, so
   it does not affect the whole system! You can use the following commands:

	declare -x PYTHONPATH="/Path-to-development/0.2/src:"$PYTHONPATH

2. Move to the source directory to run the application
	
	cd /Path-to-development/0.2/src
	python nssbackup-config-gui.py
	python nssbackup-restore-gui.py
	python nssbackupd.py
