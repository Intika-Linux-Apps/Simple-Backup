NSSBackup 'Default Profile' Logger
==============
2009-01-19 18:47:27,960 - DEBUG - ConfigManager.py:__create_logger(484) - Log output for [Default Profile] is directed to file '/home/peer/backups/logs/nssbackup.log'
2009-01-19 18:47:27,961 - DEBUG - ConfigManager.py:validateConfigFileOpts(525) - Validating config file
2009-01-19 18:47:27,962 - INFO - ConfigManager.py:__init__(264) - ConfigManager created from config file '/home/peer/.config/nssbackup/nssbackup.conf'.
2009-01-19 18:47:28,171 - INFO - BackupManager.py:__init__(153) - BackupManager created 
2009-01-19 18:47:28,182 - INFO - BackupManager.py:makeBackup(159) - Starting backup [Default Profile]
2009-01-19 18:47:28,183 - DEBUG - BackupManager.py:__setlockfile(451) - Created lockfile at '/home/peer/.local/share/nssbackup/nssbackup.lock' with info '10013'
2009-01-19 18:47:28,183 - INFO - FuseFAM.py:initialize(172) - Initializing FUSE FILE ACCESS MANAGER !
2009-01-19 18:47:28,184 - DEBUG - FuseFAM.py:initialize(238) - [log]
file = '/home/peer/backups/logs/nssbackup.log'
level = '10'
[places]
prefix = '/usr'
[schedule]
cron = "SHELL=/bin/bash\nPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\nSHELL=/bin/bash\nPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n0 4 * * *\troot\tif [ -x '/home/peer/programming/python/nssb/modified/progressbar/0.2/datas/nssbackup' ]; then /home/peer/programming/python/nssb/modified/progressbar/0.2/datas/nssbackup; fi;\troot\tif [ -x '/home/peer/programming/python/nssb/modified/progressbar/0.2/datas/nssbackup' ]; then /home/peer/programming/python/nssb/modified/progressbar/0.2/datas/nssbackup; fi;"
[dirconfig]
/home/peer/backups/testdocs/docs/ = '1'
/home/peer/backups/testdocs/docs/PyThreads.pdf~ = '0'
[general]
splitsize = '0'
target = '/media/TRANSFER/home/pub/testbak/bak'
format = 'bzip2'
mountdir = '/home/peer/.local/share/nssbackup/mountdir'
purge = '4'
maxincrement = '7'
lockfile = '/home/peer/.local/share/nssbackup/nssbackup.lock'
backuplinks = '1'
[report]
from = 'NSsbackup Daemon <peer@ayida.ext>'
[exclude]
regex = '\\.avi,\\.bak'
2009-01-19 18:47:28,185 - INFO - UpgradeManager.py:upgradeAll(119) - Upgrading All valid snapshot in '/media/TRANSFER/home/pub/testbak/bak'
2009-01-19 18:47:28,186 - DEBUG - SnapshotManager.py:getSnapshots(132) - [Snapshots Listing]
2009-01-19 18:47:28,186 - DEBUG - SnapshotManager.py:getSnapshots(132) - [Snapshots Listing]
2009-01-19 18:47:28,187 - INFO - SnapshotManager.py:_do_cutoff_purge(714) - Simple purge - remove all backups older then 4 days
2009-01-19 18:47:28,187 - DEBUG - SnapshotManager.py:getSnapshots(132) - [Snapshots Listing]
2009-01-19 18:47:28,187 - DEBUG - SnapshotManager.py:getSnapshots(132) - [Snapshots Listing]
2009-01-19 18:47:28,188 - DEBUG - SnapshotManager.py:getSnapshots(132) - [Snapshots Listing]
2009-01-19 18:47:28,189 - INFO - BackupManager.py:makeBackup(204) - Starting snapshot 2009-01-19_18.47.28.188518.ayida.ful 
2009-01-19 18:47:28,189 - INFO - BackupManager.py:makeBackup(217) - Setting packages File 
2009-01-19 18:47:28,368 - INFO - BackupManager.py:makeBackup(228) - Setting Excludes File 
2009-01-19 18:47:28,369 - INFO - BackupManager.py:makeBackup(236) - Setting compression format 
2009-01-19 18:47:28,369 - DEBUG - Snapshot.py:setFormat(344) - Set the compression format to bzip2
2009-01-19 18:47:28,370 - INFO - BackupManager.py:makeBackup(241) - Setting split size
2009-01-19 18:47:28,370 - DEBUG - BackupManager.py:__fillSnapshot(382) - getting exclude list for actual snapshot
2009-01-19 18:47:28,371 - DEBUG - BackupManager.py:__fillSnapshot(398) - set the list to backup and to exclude
2009-01-19 18:47:28,371 - DEBUG - BackupManager.py:__fillSnapshot(415) - We have now every thing we need, starting the creation of the complete exclude list 
2009-01-19 18:47:28,374 - DEBUG - BackupManager.py:__fillSnapshot(426) - Maximum free size required is '0 Mb 592 Kb 571' 
2009-01-19 18:47:28,472 - INFO - tar.py:makeTarFullBackup(319) - Launching TAR to make a Full backup 
2009-01-19 18:47:28,473 - DEBUG - tar.py:__prepareTarCommonOpts(233) - ['-cS', '--bzip2', '--directory=/', '--ignore-failed-read', '--files-from=/media/TRANSFER/home/pub/testbak/bak/2009-01-19_18.47.28.188518.ayida.ful/includes.list.tmp', '--exclude-from=/media/TRANSFER/home/pub/testbak/bak/2009-01-19_18.47.28.188518.ayida.ful/excludes.list.tmp', '--file=/media/TRANSFER/home/pub/testbak/bak/2009-01-19_18.47.28.188518.ayida.ful/files.tar.bz2']
2009-01-19 18:47:28,474 - DEBUG - tar.py:__prepareTarCommonOpts(235) - Common TAR options : ['-cS', '--bzip2', '--directory=/', '--ignore-failed-read', '--files-from=/media/TRANSFER/home/pub/testbak/bak/2009-01-19_18.47.28.188518.ayida.ful/includes.list.tmp', '--exclude-from=/media/TRANSFER/home/pub/testbak/bak/2009-01-19_18.47.28.188518.ayida.ful/excludes.list.tmp', '--file=/media/TRANSFER/home/pub/testbak/bak/2009-01-19_18.47.28.188518.ayida.ful/files.tar.bz2']
2009-01-19 18:47:28,474 - DEBUG - tar.py:makeTarFullBackup(331) - Snapshot's snarfile: /media/TRANSFER/home/pub/testbak/bak/2009-01-19_18.47.28.188518.ayida.ful/files.snar
2009-01-19 18:47:28,475 - DEBUG - tar.py:makeTarFullBackup(332) - Temporary snarfile: /tmp/nssbackup/files.snar
2009-01-19 18:47:28,476 - DEBUG - __init__.py:launch(194) - Lauching : ['tar', '-cS', '--bzip2', '--directory=/', '--ignore-failed-read', '--files-from=/media/TRANSFER/home/pub/testbak/bak/2009-01-19_18.47.28.188518.ayida.ful/includes.list.tmp', '--exclude-from=/media/TRANSFER/home/pub/testbak/bak/2009-01-19_18.47.28.188518.ayida.ful/excludes.list.tmp', '--file=/media/TRANSFER/home/pub/testbak/bak/2009-01-19_18.47.28.188518.ayida.ful/files.tar.bz2', '--listed-incremental=/tmp/nssbackup/files.snar']
2009-01-19 18:47:29,906 - DEBUG - tar.py:makeTarFullBackup(343) - TAR Output : 
2009-01-19 18:47:29,911 - INFO - BackupManager.py:__unsetlockfile(458) - Session of backup is finished (/home/peer/.local/share/nssbackup/nssbackup.lock is removed) 
